import os
import logging
import requests
import ephem
from telegram.constants import ChatAction 
from datetime import datetime, timedelta
from telegram import Update, ReplyKeyboardMarkup, ReplyKeyboardRemove
from telegram.ext import (
    Application,
    CommandHandler,
    MessageHandler,
    ConversationHandler,
    ContextTypes,
    filters
)

# === –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è ===
TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
OPENWEATHER_API_KEY = os.getenv("OPENWEATHER_API_KEY")

# === –°–æ—Å—Ç–æ—è–Ω–∏—è ===
CHOOSING_REGION, CHOOSING_DISTRICT, CHOOSING_WATERBODY, CHOOSING_DATE = range(4)

# === –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ ===
logging.basicConfig(level=logging.INFO)

# === –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è user_id ===
def save_user_id(user_id):
    pass

# === –°–ª–æ–≤–∞—Ä–∏ ===

REGIONS = {
    "–ú–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å": "Minsk"
}

DISTRICTS_BY_REGION = {
    "–ú–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å": [
        "–ë–µ—Ä–µ–∑–∏–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω", "–ë–æ—Ä–∏—Å–æ–≤—Å–∫–∏–π —Ä–∞–π–æ–Ω", "–í–∏–ª–µ–π—Å–∫–∏–π —Ä–∞–π–æ–Ω", "–í–æ–ª–æ–∂–∏–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω",
        "–î–∑–µ—Ä–∂–∏–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω", "–ö–ª–µ—Ü–∫–∏–π —Ä–∞–π–æ–Ω", "–ö–æ–ø—ã–ª—å—Å–∫–∏–π —Ä–∞–π–æ–Ω", "–ö—Ä—É–ø—Å–∫–∏–π —Ä–∞–π–æ–Ω",
        "–õ–æ–≥–æ–π—Å–∫–∏–π —Ä–∞–π–æ–Ω", "–õ—é–±–∞–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω", "–ú–∏–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω", "–ú–æ–ª–æ–¥–µ—á–Ω–µ–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω",
        "–ú—è–¥–µ–ª—å—Å–∫–∏–π —Ä–∞–π–æ–Ω", "–ù–µ—Å–≤–∏–∂—Å–∫–∏–π —Ä–∞–π–æ–Ω", "–ü—É—Ö–æ–≤–∏—á—Å–∫–∏–π —Ä–∞–π–æ–Ω", "–°–ª—É—Ü–∫–∏–π —Ä–∞–π–æ–Ω",
        "–°–º–æ–ª–µ–≤–∏—á—Å–∫–∏–π —Ä–∞–π–æ–Ω", "–°–æ–ª–∏–≥–æ—Ä—Å–∫–∏–π —Ä–∞–π–æ–Ω", "–°—Ç–∞—Ä–æ–¥–æ—Ä–æ–∂—Å–∫–∏–π —Ä–∞–π–æ–Ω", "–°—Ç–æ–ª–±—Ü–æ–≤—Å–∫–∏–π —Ä–∞–π–æ–Ω",
        "–£–∑–¥–µ–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω", "–ß–µ—Ä–≤–µ–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω"
    ]
}
WATERBODIES_BY_DISTRICT = {
    "–ë–µ—Ä–µ–∑–∏–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω": ["—Ä. –ë–µ—Ä–µ–∑–∏–Ω–∞", "–æ–∑. –°–µ–ª—è–≤–∞", "–æ–∑. –ß—ë—Ä–Ω–æ–µ", "–æ–∑. –ë–µ–ª–æ–µ"],
    "–ë–æ—Ä–∏—Å–æ–≤—Å–∫–∏–π —Ä–∞–π–æ–Ω": ["—Ä. –ë–µ—Ä–µ–∑–∏–Ω–∞", "–æ–∑. –°–≤—è—Ç–µ—Ü", "–æ–∑. –õ–æ—à–∞", "–ö–∞—Ä—å–µ—Ä –°–º–æ–ª–µ–≤–∏—á–∏ üíµ"],
    "–í–∏–ª–µ–π—Å–∫–∏–π —Ä–∞–π–æ–Ω": ["–≤–¥—Ö—Ä. –í–∏–ª–µ–π—Å–∫–æ–µ", "–æ–∑. –õ–µ—Å–Ω–æ–µ", "–æ–∑. –Ø—á–æ–Ω–∫–∞", "–±/–æ –í–∏–ª–µ–π—Å–∫–∏–π –∫—Ä–∞–π üíµ"],
    "–í–æ–ª–æ–∂–∏–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω": ["—Ä. –í–∏–ª–∏—è", "—Ä. –ò—Å–ª–æ—á—å", "–ü—Ä—É–¥ –ò–≤–µ–Ω–µ—Ü–∫–∏–π üíµ"],
    "–î–∑–µ—Ä–∂–∏–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω": ["—Ä. –ü—Ç–∏—á—å", "–ü—Ä—É–¥ –†—É–¥–µ–Ω—Å–∫–∏–π üíµ", "–ü—Ä—É–¥ –î–∑–µ—Ä–∂–∏–Ω—Å–∫–∏–π üíµ"],
    "–ö–ª–µ—Ü–∫–∏–π —Ä–∞–π–æ–Ω": ["—Ä. –õ–∞–Ω—å", "–ü—Ä—É–¥ –ö–æ–ø—ã–ª–µ–≤—Å–∫–∏–π üíµ"],
    "–ö–æ–ø—ã–ª—å—Å–∫–∏–π —Ä–∞–π–æ–Ω": ["—Ä. –õ–∞–Ω—å", "–æ–∑. –û—Å–∞"],
    "–ö—Ä—É–ø—Å–∫–∏–π —Ä–∞–π–æ–Ω": ["–≤–¥—Ö—Ä. –ö—Ä—É–ø—Å–∫–æ–µ", "—Ä. –ë–æ–±—Ä"],
    "–õ–æ–≥–æ–π—Å–∫–∏–π —Ä–∞–π–æ–Ω": ["—Ä. –£—Å–∞", "–æ–∑. –ú–µ–¥–≤–µ–∂—å–µ", "–æ–∑. –ß–µ—Ä–Ω–æ–±—ã–ª—å—Å–∫–æ–µ", "–±/–æ –°–∏–ª–∏—á–∏ üíµ"],
    "–õ—é–±–∞–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω": ["–æ–∑. –ö—Ä–æ–º–∞–Ω—å", "–æ–∑. –†—É–¥–µ—è"],
    "–ú–∏–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω": [
        "–≤–¥—Ö—Ä. –ó–∞—Å–ª–∞–≤—Å–∫–æ–µ", "–î—Ä–æ–∑–¥—ã", "–æ–∑. –ú–µ–¥–≤–µ–∂–∏–Ω–æ", "—Ä. –°–≤–∏—Å–ª–æ—á—å",
        "–±/–æ –î—Ä–æ–∑–¥—ã-–ö–ª—É–± üíµ", "–±/–æ –ú–∏–Ω—Å–∫–æ–µ –º–æ—Ä–µ üíµ"
    ],
    "–ú–æ–ª–æ–¥–µ—á–Ω–µ–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω": ["–æ–∑. –°–≤–∏—Ä—å", "–æ–∑. –õ–µ—à–Ω—è", "–ü—Ä—É–¥ –ö–Ω—è–≥–∏–Ω–∏–Ω—Å–∫–∏–π üíµ"],
    "–ú—è–¥–µ–ª—å—Å–∫–∏–π —Ä–∞–π–æ–Ω": ["–æ–∑. –ù–∞—Ä–æ—á—å", "–æ–∑. –ú—è—Å—Ç—Ä–æ", "–æ–∑. –ë–∞—Ç–æ—Ä–∏–Ω–æ", "–æ–∑. –ë–æ–ª–¥—É–∫", "–æ–∑. –í–∏–ª–µ–π–∫–∞"],
    "–ù–µ—Å–≤–∏–∂—Å–∫–∏–π —Ä–∞–π–æ–Ω": ["–ù–µ—Å–≤–∏–∂—Å–∫–∏–µ –ø—Ä—É–¥—ã", "–æ–∑. –õ–∞–Ω—å", "–±/–æ –ù–µ—Å–≤–∏–∂ üíµ"],
    "–ü—É—Ö–æ–≤–∏—á—Å–∫–∏–π —Ä–∞–π–æ–Ω": ["—Ä. –ü—Ç–∏—á—å", "–±/–æ –î—Ä—É–∂–±–∞ üíµ"],
    "–°–ª—É—Ü–∫–∏–π —Ä–∞–π–æ–Ω": ["—Ä. –°–ª—É—á—å", "–æ–∑. –°–ª—É—á"],
    "–°–º–æ–ª–µ–≤–∏—á—Å–∫–∏–π —Ä–∞–π–æ–Ω": ["–æ–∑. –ë–µ–ª–æ–µ", "–ö–∞—Ä—å–µ—Ä –°–º–æ–ª–µ–≤–∏—á—Å–∫–∏–π üíµ"],
    "–°–æ–ª–∏–≥–æ—Ä—Å–∫–∏–π —Ä–∞–π–æ–Ω": ["–æ–∑. –†—É–¥–µ—è", "–≤–¥—Ö—Ä. –°–æ–ª–∏–≥–æ—Ä—Å–∫–æ–µ"],
    "–°—Ç–∞—Ä–æ–¥–æ—Ä–æ–∂—Å–∫–∏–π —Ä–∞–π–æ–Ω": ["—Ä. –û—Ä–µ—Å—Å–∞"],
    "–°—Ç–æ–ª–±—Ü–æ–≤—Å–∫–∏–π —Ä–∞–π–æ–Ω": ["—Ä. –ù–µ–º–∞–Ω", "—Ä. –õ–æ—à–∞"],
    "–£–∑–¥–µ–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω": ["—Ä. –£—Å–∞"],
    "–ß–µ—Ä–≤–µ–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω": ["–≤–¥—Ö—Ä. –ß–∏–≥–∏—Ä–∏–Ω—Å–∫–æ–µ", "–±/–æ –ß–∏–≥–∏—Ä–∏–Ω—Å–∫–æ–µ üíµ"]
}

WATERBODY_TO_CITY = {
    # –ë–µ—Ä–µ–∑–∏–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω
    "—Ä. –ë–µ—Ä–µ–∑–∏–Ω–∞": "Berezino",
    "–æ–∑. –°–µ–ª—è–≤–∞": "Krugloe",
    "–æ–∑. –ß—ë—Ä–Ω–æ–µ": "Berezino",
    "–æ–∑. –ë–µ–ª–æ–µ": "Berezino",

    # –ë–æ—Ä–∏—Å–æ–≤—Å–∫–∏–π —Ä–∞–π–æ–Ω
    "–æ–∑. –°–≤—è—Ç–µ—Ü": "Barysaw",
    "–æ–∑. –õ–æ—à–∞": "Barysaw",
    "–ö–∞—Ä—å–µ—Ä –°–º–æ–ª–µ–≤–∏—á–∏ üíµ": "Smalyavichy",
    "—Ä. –ë–µ—Ä–µ–∑–∏–Ω–∞": "Barysaw",

    # –í–∏–ª–µ–π—Å–∫–∏–π —Ä–∞–π–æ–Ω
    "–≤–¥—Ö—Ä. –í–∏–ª–µ–π—Å–∫–æ–µ": "Vileyka",
    "–æ–∑. –õ–µ—Å–Ω–æ–µ": "Vileyka",
    "–æ–∑. –Ø—á–æ–Ω–∫–∞": "Vileyka",
    "–±/–æ –í–∏–ª–µ–π—Å–∫–∏–π –∫—Ä–∞–π üíµ": "Vileyka",

    # –í–æ–ª–æ–∂–∏–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω
    "—Ä. –í–∏–ª–∏—è": "Valozhyn",
    "—Ä. –ò—Å–ª–æ—á—å": "Valozhyn",
    "–ü—Ä—É–¥ –ò–≤–µ–Ω–µ—Ü–∫–∏–π üíµ": "Ivyanets",

    # –î–∑–µ—Ä–∂–∏–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω
    "—Ä. –ü—Ç–∏—á—å": "Dzyarzhynsk",
    "–ü—Ä—É–¥ –†—É–¥–µ–Ω—Å–∫–∏–π üíµ": "Rudensk",
    "–ü—Ä—É–¥ –î–∑–µ—Ä–∂–∏–Ω—Å–∫–∏–π üíµ": "Dzyarzhynsk",

    # –ö–ª–µ—Ü–∫–∏–π —Ä–∞–π–æ–Ω
    "—Ä. –õ–∞–Ω—å": "Kletsk",
    "–ü—Ä—É–¥ –ö–æ–ø—ã–ª–µ–≤—Å–∫–∏–π üíµ": "Kopyl",

    # –ö–æ–ø—ã–ª—å—Å–∫–∏–π —Ä–∞–π–æ–Ω
    "–æ–∑. –û—Å–∞": "Kopyl",

    # –ö—Ä—É–ø—Å–∫–∏–π —Ä–∞–π–æ–Ω
    "–≤–¥—Ö—Ä. –ö—Ä—É–ø—Å–∫–æ–µ": "Krupki",
    "—Ä. –ë–æ–±—Ä": "Krupki",

    # –õ–æ–≥–æ–π—Å–∫–∏–π —Ä–∞–π–æ–Ω
    "—Ä. –£—Å–∞": "Lahoysk",
    "–æ–∑. –ú–µ–¥–≤–µ–∂—å–µ": "Lahoysk",
    "–æ–∑. –ß–µ—Ä–Ω–æ–±—ã–ª—å—Å–∫–æ–µ": "Lahoysk",
    "–±/–æ –°–∏–ª–∏—á–∏ üíµ": "Lahoysk",

    # –õ—é–±–∞–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω
    "–æ–∑. –ö—Ä–æ–º–∞–Ω—å": "Lyuban",
    "–æ–∑. –†—É–¥–µ—è": "Lyuban",

    # –ú–∏–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω
    "–≤–¥—Ö—Ä. –ó–∞—Å–ª–∞–≤—Å–∫–æ–µ": "Zaslawye",
    "–î—Ä–æ–∑–¥—ã": "Minsk",
    "–æ–∑. –ú–µ–¥–≤–µ–∂–∏–Ω–æ": "Minsk",
    "—Ä. –°–≤–∏—Å–ª–æ—á—å": "Minsk",
    "–±/–æ –î—Ä–æ–∑–¥—ã-–ö–ª—É–± üíµ": "Minsk",
    "–±/–æ –ú–∏–Ω—Å–∫–æ–µ –º–æ—Ä–µ üíµ": "Zaslawye",

    # –ú–æ–ª–æ–¥–µ—á–Ω–µ–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω
    "–æ–∑. –°–≤–∏—Ä—å": "Maladzyechna",
    "–æ–∑. –õ–µ—à–Ω—è": "Maladzyechna",
    "–ü—Ä—É–¥ –ö–Ω—è–≥–∏–Ω–∏–Ω—Å–∫–∏–π üíµ": "Maladzyechna",

    # –ú—è–¥–µ–ª—å—Å–∫–∏–π —Ä–∞–π–æ–Ω
    "–æ–∑. –ù–∞—Ä–æ—á—å": "Narach",
    "–æ–∑. –ú—è—Å—Ç—Ä–æ": "Narach",
    "–æ–∑. –ë–∞—Ç–æ—Ä–∏–Ω–æ": "Narach",
    "–æ–∑. –ë–æ–ª–¥—É–∫": "Narach",
    "–æ–∑. –í–∏–ª–µ–π–∫–∞": "Narach",

    # –ù–µ—Å–≤–∏–∂—Å–∫–∏–π —Ä–∞–π–æ–Ω
    "–ù–µ—Å–≤–∏–∂—Å–∫–∏–µ –ø—Ä—É–¥—ã": "Nyasvizh",
    "–æ–∑. –õ–∞–Ω—å": "Nyasvizh",
    "–±/–æ –ù–µ—Å–≤–∏–∂ üíµ": "Nyasvizh",

    # –ü—É—Ö–æ–≤–∏—á—Å–∫–∏–π —Ä–∞–π–æ–Ω
    "–±/–æ –î—Ä—É–∂–±–∞ üíµ": "Pukhavichy",
    "—Ä. –ü—Ç–∏—á—å": "Pukhavichy",

    # –°–ª—É—Ü–∫–∏–π —Ä–∞–π–æ–Ω
    "—Ä. –°–ª—É—á—å": "Slutsk",
    "–æ–∑. –°–ª—É—á": "Slutsk",

    # –°–º–æ–ª–µ–≤–∏—á—Å–∫–∏–π —Ä–∞–π–æ–Ω
    "–æ–∑. –ë–µ–ª–æ–µ": "Smalyavichy",
    "–ö–∞—Ä—å–µ—Ä –°–º–æ–ª–µ–≤–∏—á—Å–∫–∏–π üíµ": "Smalyavichy",

    # –°–æ–ª–∏–≥–æ—Ä—Å–∫–∏–π —Ä–∞–π–æ–Ω
    "–æ–∑. –†—É–¥–µ—è": "Salihorsk",
    "–≤–¥—Ö—Ä. –°–æ–ª–∏–≥–æ—Ä—Å–∫–æ–µ": "Salihorsk",

    # –°—Ç–∞—Ä–æ–¥–æ—Ä–æ–∂—Å–∫–∏–π —Ä–∞–π–æ–Ω
    "—Ä. –û—Ä–µ—Å—Å–∞": "Staradarozhsk",

    # –°—Ç–æ–ª–±—Ü–æ–≤—Å–∫–∏–π —Ä–∞–π–æ–Ω
    "—Ä. –ù–µ–º–∞–Ω": "Stowbtsy",
    "—Ä. –õ–æ—à–∞": "Stowbtsy",

    # –£–∑–¥–µ–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω
    "—Ä. –£—Å–∞": "Uzda",

    # –ß–µ—Ä–≤–µ–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω
    "–≤–¥—Ö—Ä. –ß–∏–≥–∏—Ä–∏–Ω—Å–∫–æ–µ": "Chervyen",
    "–±/–æ –ß–∏–≥–∏—Ä–∏–Ω—Å–∫–æ–µ üíµ": "Chervyen"
}

FISH_BY_WATERBODY = {
    # –ë–µ—Ä–µ–∑–∏–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω
    "—Ä. –ë–µ—Ä–µ–∑–∏–Ω–∞": ["–©—É–∫–∞", "–°–æ–º", "–ñ–µ—Ä–µ—Ö", "–ì–æ–ª–∞–≤–ª—å", "–õ–µ—â"],
    "–æ–∑. –°–µ–ª—è–≤–∞": ["–õ–µ—â", "–û–∫—É–Ω—å", "–°—É–¥–∞–∫"],
    "–æ–∑. –ß—ë—Ä–Ω–æ–µ": ["–ö–∞—Ä–∞—Å—å", "–©—É–∫–∞"],
    "–æ–∑. –ë–µ–ª–æ–µ": ["–ö–∞—Ä–∞—Å—å", "–ö–∞—Ä–ø"],

    # –ë–æ—Ä–∏—Å–æ–≤—Å–∫–∏–π —Ä–∞–π–æ–Ω
    "—Ä. –ë–µ—Ä–µ–∑–∏–Ω–∞": ["–©—É–∫–∞", "–°–æ–º", "–ñ–µ—Ä–µ—Ö", "–ì–æ–ª–∞–≤–ª—å", "–õ–µ—â"],
    "–æ–∑. –°–≤—è—Ç–µ—Ü": ["–ö–∞—Ä–∞—Å—å", "–õ–µ—â"],
    "–æ–∑. –õ–æ—à–∞": ["–©—É–∫–∞", "–ü–ª–æ—Ç–≤–∞"],
    "–ö–∞—Ä—å–µ—Ä –°–º–æ–ª–µ–≤–∏—á–∏ üíµ": ["–ö–∞—Ä–ø", "–ö–∞—Ä–∞—Å—å"],

    # –í–∏–ª–µ–π—Å–∫–∏–π —Ä–∞–π–æ–Ω
    "–≤–¥—Ö—Ä. –í–∏–ª–µ–π—Å–∫–æ–µ": ["–°—É–¥–∞–∫", "–©—É–∫–∞", "–û–∫—É–Ω—å", "–°–æ–º"],
    "–æ–∑. –õ–µ—Å–Ω–æ–µ": ["–©—É–∫–∞", "–ö–∞—Ä–∞—Å—å"],
    "–æ–∑. –Ø—á–æ–Ω–∫–∞": ["–õ–µ—â", "–ü–ª–æ—Ç–≤–∞"],
    "–±/–æ –í–∏–ª–µ–π—Å–∫–∏–π –∫—Ä–∞–π üíµ": ["–ö–∞—Ä–ø", "–ö–∞—Ä–∞—Å—å"],

    # –í–æ–ª–æ–∂–∏–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω
    "—Ä. –í–∏–ª–∏—è": ["–©—É–∫–∞", "–ñ–µ—Ä–µ—Ö"],
    "—Ä. –ò—Å–ª–æ—á—å": ["–§–æ—Ä–µ–ª—å", "–•–∞—Ä–∏—É—Å"],
    "–ü—Ä—É–¥ –ò–≤–µ–Ω–µ—Ü–∫–∏–π üíµ": ["–ö–∞—Ä–ø", "–ö–∞—Ä–∞—Å—å"],

    # –î–∑–µ—Ä–∂–∏–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω
    "—Ä. –ü—Ç–∏—á—å": ["–©—É–∫–∞", "–ö–∞—Ä–∞—Å—å", "–û–∫—É–Ω—å", "–Ø–∑—å"],
    "–ü—Ä—É–¥ –†—É–¥–µ–Ω—Å–∫–∏–π üíµ": ["–ö–∞—Ä–ø", "–ö–∞—Ä–∞—Å—å"],
    "–ü—Ä—É–¥ –î–∑–µ—Ä–∂–∏–Ω—Å–∫–∏–π üíµ": ["–ö–∞—Ä–ø", "–ö–∞—Ä–∞—Å—å"],

    # –ö–ª–µ—Ü–∫–∏–π —Ä–∞–π–æ–Ω
    "—Ä. –õ–∞–Ω—å": ["–©—É–∫–∞", "–ü–ª–æ—Ç–≤–∞"],
    "–ü—Ä—É–¥ –ö–æ–ø—ã–ª–µ–≤—Å–∫–∏–π üíµ": ["–ö–∞—Ä–ø", "–ö–∞—Ä–∞—Å—å"],

    # –ö–æ–ø—ã–ª—å—Å–∫–∏–π —Ä–∞–π–æ–Ω
    "—Ä. –õ–∞–Ω—å": ["–©—É–∫–∞", "–ü–ª–æ—Ç–≤–∞"],
    "–æ–∑. –û—Å–∞": ["–ö–∞—Ä–∞—Å—å", "–ü–ª–æ—Ç–≤–∞"],

    # –ö—Ä—É–ø—Å–∫–∏–π —Ä–∞–π–æ–Ω
    "–≤–¥—Ö—Ä. –ö—Ä—É–ø—Å–∫–æ–µ": ["–ö–∞—Ä–∞—Å—å", "–õ–µ—â", "–ü–ª–æ—Ç–≤–∞"],
    "—Ä. –ë–æ–±—Ä": ["–©—É–∫–∞", "–ü–ª–æ—Ç–≤–∞"],

    # –õ–æ–≥–æ–π—Å–∫–∏–π —Ä–∞–π–æ–Ω
    "—Ä. –£—Å–∞": ["–©—É–∫–∞", "–û–∫—É–Ω—å"],
    "–æ–∑. –ú–µ–¥–≤–µ–∂—å–µ": ["–ö–∞—Ä–∞—Å—å", "–©—É–∫–∞"],
    "–æ–∑. –ß–µ—Ä–Ω–æ–±—ã–ª—å—Å–∫–æ–µ": ["–ö–∞—Ä–∞—Å—å", "–û–∫—É–Ω—å"],
    "–±/–æ –°–∏–ª–∏—á–∏ üíµ": ["–ö–∞—Ä–ø", "–ö–∞—Ä–∞—Å—å"],

    # –õ—é–±–∞–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω
    "–æ–∑. –ö—Ä–æ–º–∞–Ω—å": ["–ö–∞—Ä–∞—Å—å", "–ö–∞—Ä–ø", "–õ–µ—â"],
    "–æ–∑. –†—É–¥–µ—è": ["–°—É–¥–∞–∫", "–ü–ª–æ—Ç–≤–∞"],

    # –ú–∏–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω
    "–≤–¥—Ö—Ä. –ó–∞—Å–ª–∞–≤—Å–∫–æ–µ": ["–©—É–∫–∞", "–û–∫—É–Ω—å", "–ü–ª–æ—Ç–≤–∞"],
    "–î—Ä–æ–∑–¥—ã": ["–ö–∞—Ä–∞—Å—å", "–ö–∞—Ä–ø", "–ü–ª–æ—Ç–≤–∞"],
    "–æ–∑. –ú–µ–¥–≤–µ–∂–∏–Ω–æ": ["–ö–∞—Ä–∞—Å—å", "–û–∫—É–Ω—å"],
    "—Ä. –°–≤–∏—Å–ª–æ—á—å": ["–ö–∞—Ä–∞—Å—å", "–ü–ª–æ—Ç–≤–∞", "–û–∫—É–Ω—å"],
    "–±/–æ –î—Ä–æ–∑–¥—ã-–ö–ª—É–± üíµ": ["–ö–∞—Ä–ø", "–ö–∞—Ä–∞—Å—å"],
    "–±/–æ –ú–∏–Ω—Å–∫–æ–µ –º–æ—Ä–µ üíµ": ["–ö–∞—Ä–ø", "–ö–∞—Ä–∞—Å—å"],

    # –ú–æ–ª–æ–¥–µ—á–Ω–µ–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω
    "–æ–∑. –°–≤–∏—Ä—å": ["–õ–µ—â", "–©—É–∫–∞"],
    "–æ–∑. –õ–µ—à–Ω—è": ["–ö–∞—Ä–∞—Å—å", "–û–∫—É–Ω—å"],
    "–ü—Ä—É–¥ –ö–Ω—è–≥–∏–Ω–∏–Ω—Å–∫–∏–π üíµ": ["–ö–∞—Ä–ø", "–ö–∞—Ä–∞—Å—å"],

    # –ú—è–¥–µ–ª—å—Å–∫–∏–π —Ä–∞–π–æ–Ω
    "–æ–∑. –ù–∞—Ä–æ—á—å": ["–©—É–∫–∞", "–õ–µ—â", "–û–∫—É–Ω—å", "–°—É–¥–∞–∫"],
    "–æ–∑. –ú—è—Å—Ç—Ä–æ": ["–ö–∞—Ä–∞—Å—å", "–õ–µ—â"],
    "–æ–∑. –ë–∞—Ç–æ—Ä–∏–Ω–æ": ["–©—É–∫–∞", "–ü–ª–æ—Ç–≤–∞"],
    "–æ–∑. –ë–æ–ª–¥—É–∫": ["–©—É–∫–∞", "–û–∫—É–Ω—å"],
    "–æ–∑. –í–∏–ª–µ–π–∫–∞": ["–õ–µ—â", "–ü–ª–æ—Ç–≤–∞"],

    # –ù–µ—Å–≤–∏–∂—Å–∫–∏–π —Ä–∞–π–æ–Ω
    "–ù–µ—Å–≤–∏–∂—Å–∫–∏–µ –ø—Ä—É–¥—ã": ["–ö–∞—Ä–ø", "–ö–∞—Ä–∞—Å—å", "–õ–µ—â"],
    "–æ–∑. –õ–∞–Ω—å": ["–©—É–∫–∞", "–ü–ª–æ—Ç–≤–∞"],
    "–±/–æ –ù–µ—Å–≤–∏–∂ üíµ": ["–ö–∞—Ä–ø", "–ö–∞—Ä–∞—Å—å"],

    # –ü—É—Ö–æ–≤–∏—á—Å–∫–∏–π —Ä–∞–π–æ–Ω
    "—Ä. –ü—Ç–∏—á—å": ["–©—É–∫–∞", "–ö–∞—Ä–∞—Å—å", "–û–∫—É–Ω—å", "–Ø–∑—å"],
    "–±/–æ –î—Ä—É–∂–±–∞ üíµ": ["–ö–∞—Ä–ø", "–ö–∞—Ä–∞—Å—å"],

    # –°–ª—É—Ü–∫–∏–π —Ä–∞–π–æ–Ω
    "—Ä. –°–ª—É—á—å": ["–©—É–∫–∞", "–Ø–∑—å", "–ì–æ–ª–∞–≤–ª—å"],
    "–æ–∑. –°–ª—É—á": ["–ö–∞—Ä–∞—Å—å", "–ü–ª–æ—Ç–≤–∞"],

    # –°–º–æ–ª–µ–≤–∏—á—Å–∫–∏–π —Ä–∞–π–æ–Ω
    "–æ–∑. –ë–µ–ª–æ–µ": ["–ö–∞—Ä–∞—Å—å", "–ö–∞—Ä–ø"],
    "–ö–∞—Ä—å–µ—Ä –°–º–æ–ª–µ–≤–∏—á—Å–∫–∏–π üíµ": ["–ö–∞—Ä–ø", "–ö–∞—Ä–∞—Å—å"],

    # –°–æ–ª–∏–≥–æ—Ä—Å–∫–∏–π —Ä–∞–π–æ–Ω
    "–æ–∑. –†—É–¥–µ—è": ["–°—É–¥–∞–∫", "–ü–ª–æ—Ç–≤–∞"],
    "–≤–¥—Ö—Ä. –°–æ–ª–∏–≥–æ—Ä—Å–∫–æ–µ": ["–ö–∞—Ä–∞—Å—å", "–û–∫—É–Ω—å", "–õ–µ—â"],

    # –°—Ç–∞—Ä–æ–¥–æ—Ä–æ–∂—Å–∫–∏–π —Ä–∞–π–æ–Ω
    "—Ä. –û—Ä–µ—Å—Å–∞": ["–©—É–∫–∞", "–õ–µ—â"],

    # –°—Ç–æ–ª–±—Ü–æ–≤—Å–∫–∏–π —Ä–∞–π–æ–Ω
    "—Ä. –ù–µ–º–∞–Ω": ["–©—É–∫–∞", "–ñ–µ—Ä–µ—Ö"],
    "—Ä. –õ–æ—à–∞": ["–©—É–∫–∞", "–ü–ª–æ—Ç–≤–∞"],

    # –£–∑–¥–µ–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω
    "—Ä. –£—Å–∞": ["–©—É–∫–∞", "–û–∫—É–Ω—å"],

    # –ß–µ—Ä–≤–µ–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω
    "–≤–¥—Ö—Ä. –ß–∏–≥–∏—Ä–∏–Ω—Å–∫–æ–µ": ["–°—É–¥–∞–∫", "–©—É–∫–∞", "–°–æ–º"],
    "–±/–æ –ß–∏–≥–∏—Ä–∏–Ω—Å–∫–æ–µ üíµ": ["–ö–∞—Ä–ø", "–ö–∞—Ä–∞—Å—å"]
}

# === –ü—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è —Ä—ã–± ===
FISH_CONDITIONS = {
    "–©—É–∫–∞": {
        "temp_min": 12,
        "temp_max": 18,
        "wind_max": 5,
        "pressure_preference": "high",
    },
    "–û–∫—É–Ω—å": {
        "temp_min": 10,
        "temp_max": 20,
        "wind_max": 7,
        "pressure_preference": "stable",
    },
    "–õ–µ—â": {
        "temp_min": 15,
        "temp_max": 22,
        "wind_max": 4,
        "pressure_preference": "stable",
    },
    "–ö–∞—Ä–ø": {
        "temp_min": 18,
        "temp_max": 24,
        "wind_max": 3,
        "pressure_preference": "low",
    },
    "–°—É–¥–∞–∫": {
        "temp_min": 15,
        "temp_max": 20,
        "wind_max": 5,
        "pressure_preference": "low",
    },
    "–°–æ–º": {
        "temp_min": 20,
        "temp_max": 26,
        "wind_max": 4,
        "pressure_preference": "low",
    },
    "–ö–∞—Ä–∞—Å—å": {
        "temp_min": 16,
        "temp_max": 23,
        "wind_max": 2,
        "pressure_preference": "stable",
    },
    "–ñ–µ—Ä–µ—Ö": {
        "temp_min": 15,
        "temp_max": 20,
        "wind_max": 6,
        "pressure_preference": "high",
    },
    "–ì–æ–ª–∞–≤–ª—å": {
        "temp_min": 14,
        "temp_max": 20,
        "wind_max": 5,
        "pressure_preference": "stable",
    },
    "–ü–ª–æ—Ç–≤–∞": {
        "temp_min": 10,
        "temp_max": 18,
        "wind_max": 4,
        "pressure_preference": "stable",
    },
    "–Ø–∑—å": {
        "temp_min": 12,
        "temp_max": 18,
        "wind_max": 5,
        "pressure_preference": "stable",
    }
}

# === –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ ===

def fetch_weather(city):
    try:
        url = f"https://api.openweathermap.org/data/2.5/weather?q={city},BY&appid={OPENWEATHER_API_KEY}&units=metric&lang=ru"
        response = requests.get(url)
        if response.status_code == 200:
            data = response.json()
            return {
                "temp": data["main"]["temp"],
                "wind": data["wind"]["speed"],
                "pressure": data["main"]["pressure"],
                "description": data["weather"][0]["description"]
            }
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø–æ–≥–æ–¥—ã: {e}")
    return None

def get_moon_phase(date=None):
    moon = ephem.Moon()
    moon.compute(ephem.Date(date) if date else ephem.now())
    phase = moon.phase
    if phase < 5:
        return "–Ω–æ–≤–æ–ª—É–Ω–∏–µ"
    elif 5 <= phase < 45:
        return "–ø–µ—Ä–≤–∞—è —á–µ—Ç–≤–µ—Ä—Ç—å"
    elif 45 <= phase < 55:
        return "–ø–æ–ª–Ω–æ–ª—É–Ω–∏–µ"
    else:
        return "–ø–æ—Å–ª–µ–¥–Ω—è—è —á–µ—Ç–≤–µ—Ä—Ç—å"

def calculate_success(temp, wind, pressure, moon_phase, fish):
    conditions = FISH_CONDITIONS.get(fish)

    if not conditions:
        return random.randint(30, 70)

    score = 50

    # –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞
    if conditions["temp_min"] <= temp <= conditions["temp_max"]:
        score += 20
    else:
        score -= 10

    # –í–µ—Ç–µ—Ä
    if wind <= conditions["wind_max"]:
        score += 10
    else:
        score -= 10

    # –î–∞–≤–ª–µ–Ω–∏–µ
    if conditions["pressure_preference"] == "high" and pressure > 755:
        score += 10
    elif conditions["pressure_preference"] == "low" and pressure < 745:
        score += 10
    elif conditions["pressure_preference"] == "stable" and 745 <= pressure <= 755:
        score += 10
    else:
        score -= 5

    # –§–∞–∑–∞ –õ—É–Ω—ã
    if moon_phase == "–ø–æ–ª–Ω–æ–ª—É–Ω–∏–µ":
        score -= 10
    elif moon_phase in ["–Ω–æ–≤–æ–ª—É–Ω–∏–µ", "–ø–µ—Ä–≤–∞—è —á–µ—Ç–≤–µ—Ä—Ç—å"]:
        score += 10

    # –í—Ä–µ–º—è —Å—É—Ç–æ–∫
    now_hour = datetime.now().hour
    if now_hour <= 9 or now_hour >= 18:
        score += 10

    return min(100, max(0, score))

# === –ö–æ–º–∞–Ω–¥—ã ===

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    keyboard = [["üé£ –ù–∞—á–∞—Ç—å"]]
    markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! –ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å üé£",
        reply_markup=markup
    )
    return CHOOSING_REGION

async def choose_region(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    region = update.message.text
    if region not in REGIONS:
        keyboard = [[r] for r in REGIONS.keys()] + [["‚ùå –û—Ç–º–µ–Ω–∞"]]
        markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
        await update.message.reply_text("üèû –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏ –æ–±–ª–∞—Å—Ç—å:", reply_markup=markup)
        return CHOOSING_REGION

    context.user_data["region"] = region
    keyboard = [[d] for d in DISTRICTS_BY_REGION[region]] + [["‚¨Ö –ù–∞–∑–∞–¥"]]
    markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    await update.message.reply_text("üèò –¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏ —Ä–∞–π–æ–Ω:", reply_markup=markup)
    return CHOOSING_DISTRICT

async def choose_district(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    district = update.message.text
    context.user_data["district"] = district

    waterbodies = WATERBODIES_BY_DISTRICT.get(district)
    if not waterbodies:
        await update.message.reply_text("‚ùó –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –ø–æ –≤–æ–¥–æ—ë–º–∞–º –≤ —ç—Ç–æ–º —Ä–∞–π–æ–Ω–µ.", reply_markup=ReplyKeyboardRemove())
        return ConversationHandler.END

    keyboard = [[w] for w in waterbodies] + [["‚¨Ö –ù–∞–∑–∞–¥"]]
    markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    await update.message.reply_text("üåä –í—ã–±–µ—Ä–∏ –≤–æ–¥–æ—ë–º:", reply_markup=markup)
    return CHOOSING_WATERBODY

async def choose_waterbody(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    waterbody = update.message.text
    context.user_data["waterbody"] = waterbody

    keyboard = [["–°–µ–≥–æ–¥–Ω—è"], ["–ó–∞–≤—Ç—Ä–∞"], ["‚¨Ö –ù–∞–∑–∞–¥"]]
    markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    await update.message.reply_text("üìÖ –í—ã–±–µ—Ä–∏ –¥–µ–Ω—å:", reply_markup=markup)
    return CHOOSING_DATE

async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    await update.message.reply_text(
        "üö´ –í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –≤—ã–±–æ—Ä. –ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Å–Ω–æ–≤–∞ ‚Äî –Ω–∞–∂–º–∏—Ç–µ üé£ –ù–∞—á–∞—Ç—å.",
        reply_markup=ReplyKeyboardRemove()
    )
    return ConversationHandler.END

async def choose_date(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    date_choice = update.message.text
    target_date = datetime.now() if date_choice == "–°–µ–≥–æ–¥–Ω—è" else datetime.now() + timedelta(days=1)
    context.user_data["target_date"] = target_date
    return await show_forecast(update, context)

async def show_forecast(update: Update, context: ContextTypes.DEFAULT_TYPE):
    region = context.user_data["region"]
    district = context.user_data["district"]
    waterbody = context.user_data["waterbody"]
    target_date = context.user_data["target_date"]

    # –≠—Ñ—Ñ–µ–∫—Ç "–ø–∏—à–µ—Ç..."
    await context.bot.send_chat_action(chat_id=update.effective_chat.id, action=ChatAction.TYPING)

    city = WATERBODY_TO_CITY.get(waterbody, REGIONS[region])
    weather = fetch_weather(city)
    if not weather:
        await update.message.reply_text("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø–æ–≥–æ–¥—É.")
        return ConversationHandler.END

    moon = get_moon_phase(target_date)

    result = f"üìç {region} / {district} / {waterbody}\n\n"
    result += (
        f"üå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {weather['temp']}¬∞C\n"
        f"üí® –í–µ—Ç–µ—Ä: {weather['wind']} –º/—Å\n"
        f"üìà –î–∞–≤–ª–µ–Ω–∏–µ: {weather['pressure']} –º–º —Ä—Ç. —Å—Ç.\n"
        f"üåë –§–∞–∑–∞ –õ—É–Ω—ã: {moon}\n\n"
        f"–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –∫–ª—ë–≤–∞:\n"
    )

    for fish in FISH_BY_WATERBODY.get(waterbody, []):
        chance = calculate_success(weather['temp'], weather['wind'], weather['pressure'], moon, fish)
        result += f"- {fish}: {chance}%\n"

    await update.message.reply_text(result, reply_markup=ReplyKeyboardRemove())
    return ConversationHandler.END

# –ö–Ω–æ–ø–∫–∞ –¥–ª—è –Ω–æ–≤–æ–≥–æ –ø—Ä–æ–≥–Ω–æ–∑–∞
    keyboard = [["üé£ –ù–æ–≤—ã–π –ø—Ä–æ–≥–Ω–æ–∑"]]
    markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

    await update.message.reply_text(result, reply_markup=markup)
    return CHOOSING_REGION

# === –ó–∞–ø—É—Å–∫ ===
def main():
    application = Application.builder().token(TELEGRAM_TOKEN).build()

    conv_handler = ConversationHandler(
        entry_points=[
            MessageHandler(filters.Regex("^üé£ –ù–∞—á–∞—Ç—å$"), start),
            CommandHandler("start", start)
        ],
        states={
            CHOOSING_REGION: [
                MessageHandler(filters.Regex("^‚ùå –û—Ç–º–µ–Ω–∞$"), cancel),
                MessageHandler(filters.TEXT & ~filters.COMMAND, choose_region)
            ],
            CHOOSING_DISTRICT: [
                MessageHandler(filters.Regex("^‚¨ÖÔ∏è –ù–∞–∑–∞–¥$"), start),
                MessageHandler(filters.Regex("^‚ùå –û—Ç–º–µ–Ω–∞$"), cancel),
                MessageHandler(filters.TEXT & ~filters.COMMAND, choose_district)
            ],
            CHOOSING_WATERBODY: [
                MessageHandler(filters.Regex("^‚¨ÖÔ∏è –ù–∞–∑–∞–¥$"), choose_region),
                MessageHandler(filters.Regex("^‚ùå –û—Ç–º–µ–Ω–∞$"), cancel),
                MessageHandler(filters.TEXT & ~filters.COMMAND, choose_waterbody)
            ],
            CHOOSING_DATE: [
                MessageHandler(filters.Regex("^‚¨ÖÔ∏è –ù–∞–∑–∞–¥$"), choose_district),
                MessageHandler(filters.Regex("^‚ùå –û—Ç–º–µ–Ω–∞$"), cancel),
                MessageHandler(filters.TEXT & ~filters.COMMAND, choose_date)
            ],
        },
        fallbacks=[MessageHandler(filters.Regex("^‚ùå –û—Ç–º–µ–Ω–∞$"), cancel)],
    )

    application.add_handler(conv_handler)
    logging.info("üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –û–∂–∏–¥–∞—é –∫–æ–º–∞–Ω–¥—ã...")
    application.run_polling()


if __name__ == "__main__":
    main()
